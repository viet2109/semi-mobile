{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Texto from \"./Texto.js\";\nvar weekdays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\nimport api2, { api } from \"../services/apiOneCall\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function StatusHoje(props) {\n  function unixToWeekday(unix) {\n    var timestamp = new Date(unix * 1000);\n    var formatted = timestamp;\n    var day = formatted.getDay();\n    return weekdays[day];\n  }\n  function unixToDate(unix) {\n    var timestamp = new Date(unix * 1000);\n    var formatted = timestamp;\n    var day = formatted.getDate();\n    var month = formatted.getMonth();\n    var date = day + \" \" + months[month];\n    return date;\n  }\n  function unixToHours(unix) {\n    var timestamp = new Date(unix * 1000);\n    var formatted = timestamp;\n    var hours = String(formatted.toLocaleTimeString());\n    return hours.slice(0, 5);\n  }\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var _useState3 = useState(api),\n    _useState4 = _slicedToArray(_useState3, 2),\n    url = _useState4[0],\n    setUrl = _useState4[1];\n  useEffect(function () {\n    fetch(url).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      setData(data);\n    });\n  }, [url]);\n  useEffect(function () {\n    _asyncToGenerator(function* () {\n      setUrl(yield api2().then(function (response) {\n        return response;\n      }).then(function (data) {\n        return data;\n      }));\n    })();\n  }, []);\n  fetch(url).then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    setData(data);\n  });\n  var dataTypeLoad = props.type == 0 || props.type == 1 ? data.current : data.hourly;\n  var dataType = props.type == 0 || props.type == 1 ? data.current : data.hourly[props.type];\n  var temperatura = Math.round(dataTypeLoad ? dataType.temp : null);\n  var tempo = dataTypeLoad ? dataType.weather[0].main : null;\n  var weatherICON = dataTypeLoad ? dataType.weather[0].icon : null;\n  var timestamp = dataTypeLoad ? dataType.dt : null;\n  var img = {\n    uri: 'http://openweathermap.org/img/wn/' + weatherICON + '@4x.png'\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.divContainer,\n      children: [_jsx(Image, {\n        style: styles.imgWeatherDia,\n        source: img\n      }), _jsx(Texto, {\n        texto: tempo,\n        negrito: \"bold\",\n        tamanho: 24,\n        cor: \"#ffff\"\n      }), _jsx(Texto, {\n        texto: unixToWeekday(timestamp) + \", \" + unixToDate(timestamp),\n        negrito: \"bold\",\n        tamanho: 13,\n        cor: \"#8DB2FB\"\n      }), _jsx(Texto, {\n        texto: unixToHours(timestamp),\n        negrito: \"bold\",\n        tamanho: 13,\n        cor: \"#8DB2FB\"\n      })]\n    }), _jsx(View, {\n      style: styles.divContainer,\n      children: _jsx(Texto, {\n        texto: temperatura,\n        negrito: \"bold\",\n        tamanho: 80,\n        cor: \"#ffff\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    top: 0,\n    width: '100%',\n    height: '70%'\n  },\n  divContainer: {\n    height: '50%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-around'\n  },\n  imgWeatherDia: {\n    width: 100,\n    height: 100\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","View","StyleSheet","Image","Texto","weekdays","months","api2","api","jsx","_jsx","jsxs","_jsxs","StatusHoje","props","unixToWeekday","unix","timestamp","Date","formatted","day","getDay","unixToDate","getDate","month","getMonth","date","unixToHours","hours","String","toLocaleTimeString","slice","_useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","url","setUrl","fetch","then","res","json","_asyncToGenerator","response","dataTypeLoad","type","current","hourly","dataType","temperatura","Math","round","temp","tempo","weather","main","weatherICON","icon","dt","img","uri","style","styles","container","children","divContainer","imgWeatherDia","source","texto","negrito","tamanho","cor","create","position","top","width","height","display","alignItems","justifyContent"],"sources":["D:/Test/WeatherApp/src/componentes/BlocoDia.js"],"sourcesContent":["import React, { useState,useEffect } from 'react'\r\nimport { View,StyleSheet,Image } from 'react-native';\r\nimport Texto from './Texto.js';\r\nconst weekdays = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'];\r\nconst months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\r\n\r\nimport api2, { api } from \"../services/apiOneCall\";\r\n\r\n\r\n\r\nexport default function StatusHoje(props) {\r\n\r\n  function unixToWeekday(unix){\r\n    var timestamp = new Date(unix*1000)\r\n    var formatted = timestamp;\r\n    var day = formatted.getDay();\r\n    return(weekdays[day])}\r\n\r\n\r\nfunction unixToDate(unix){\r\n    var timestamp = new Date(unix*1000)\r\n    var formatted = timestamp;\r\n    var day = formatted.getDate();\r\n    var month = formatted.getMonth();\r\n    const date = `${day} ${months[month]}`\r\n    return(date);\r\n}\r\n\r\n\r\nfunction unixToHours(unix){\r\n    var timestamp = new Date(unix*1000)\r\n    var formatted = timestamp;\r\n    var hours = String(formatted.toLocaleTimeString());\r\n    return(hours.slice(0,5))\r\n}\r\n\r\n\r\n\r\nconst [data, setData] = useState({});\r\nconst [url, setUrl] = useState(api);\r\nuseEffect(() => {\r\n  fetch(url)\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      setData(data);\r\n    });\r\n}, [url]);\r\nuseEffect(() => {\r\n  (async function () {\r\n    setUrl(\r\n      await api2()\r\n        .then((response) => response)\r\n        .then((data) => {\r\n          return data;\r\n        })\r\n    );\r\n  })();\r\n}, []);\r\n\r\n\r\n\r\nfetch(url).then(res => res.json()).then(data => {\r\n    setData(data)\r\n})\r\n\r\n\r\nconst dataTypeLoad= props.type == 0 || props.type == 1  ? data.current: data.hourly;\r\nconst dataType = props.type == 0 || props.type == 1  ? data.current: data.hourly[props.type];\r\nvar temperatura =  Math.round(dataTypeLoad? dataType.temp :null);\r\nvar tempo = dataTypeLoad ? dataType.weather[0].main : null;\r\nvar weatherICON = dataTypeLoad ? dataType.weather[0].icon :null;\r\nvar timestamp = dataTypeLoad ? dataType.dt : null;\r\nconst img = {uri: 'http://openweathermap.org/img/wn/'+ weatherICON +'@4x.png'}\r\n\r\n\r\n return (\r\n   <View style={styles.container}>\r\n    <View style={styles.divContainer}>\r\n    <Image style={styles.imgWeatherDia} source={img}/>\r\n    <Texto  texto={tempo} negrito=\"bold\" tamanho={24} cor='#ffff'/>\r\n    <Texto  texto={`${unixToWeekday(timestamp)}, ${unixToDate(timestamp)}`} negrito=\"bold\" tamanho={13} cor='#8DB2FB'/>\r\n    <Texto  texto={unixToHours(timestamp)} negrito=\"bold\" tamanho={13} cor='#8DB2FB'/>\r\n   </View>\r\n   <View style={styles.divContainer}><Texto  texto={temperatura} negrito=\"bold\" tamanho={80} cor='#ffff'/></View>  \r\n   </View>\r\n  );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n      position: 'absolute',\r\n      top:0,\r\n      width: '100%',\r\n      height: '70%',\r\n  },\r\n  divContainer:{\r\n    height:'50%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent:'space-around',\r\n  },\r\n  imgWeatherDia:{\r\n    width:100,\r\n    height:100,\r\n  }\r\n  \r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}