{"ast":null,"code":"import React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport { DrawerActions } from '@react-navigation/native';\nimport Texto from \"./Texto\";\nimport Config from \"../../config/index.json\";\nimport { useNavigation } from '@react-navigation/native';\nexport var googlePlaces = null;\nimport { GooglePlacesAutocomplete } from \"react-native-google-places-autocomplete\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function componentes() {\n  var navigation = useNavigation();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.content,\n      children: _jsxs(View, {\n        style: styles.textBar,\n        children: [_jsx(Icon, {\n          style: {\n            marginRight: 5\n          },\n          name: \"location-outline\",\n          size: 30,\n          color: \"#00000\"\n        }), _jsx(Texto, {\n          texto: \"Other Locations\",\n          negrito: \"bold\",\n          tamanho: 25,\n          cor: \"#00000\"\n        })]\n      })\n    }), _jsx(GooglePlacesAutocomplete, {\n      placeholder: \"Search\",\n      onPress: function onPress(data) {\n        var details = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n        var lat = details.geometry.location.lat;\n        var long = details.geometry.location.lng;\n        googlePlaces = {\n          latitude: lat,\n          longitude: long\n        };\n      },\n      query: {\n        key: Config.googleApi,\n        language: \"pt-br\"\n      },\n      fetchDetails: true,\n      styles: {\n        listView: styles.listView\n      }\n    }), _jsx(TouchableOpacity, {\n      style: styles.searchButton,\n      onPress: function onPress() {\n        return navigation.dispatch(DrawerActions.closeDrawer());\n      },\n      children: _jsx(Texto, {\n        texto: \"X\",\n        negrito: \"bold\",\n        tamanho: 15,\n        cor: \"#000\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#f2ebe2\",\n    padding: 15,\n    justifyContent: \"center\"\n  },\n  textBar: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    width: \"100%\",\n    alignItems: \"baseline\",\n    gap: 30,\n    marginTop: 150,\n    marginBottom: 10\n  },\n  searchButton: {\n    position: \"absolute\",\n    width: 35,\n    height: 35,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 10,\n    shadowColor: \"#000\",\n    bottom: 10,\n    right: 10\n  },\n  listView: {\n    height: 50\n  }\n});","map":{"version":3,"names":["React","StyleSheet","View","TouchableOpacity","Icon","DrawerActions","Texto","Config","useNavigation","googlePlaces","GooglePlacesAutocomplete","jsx","_jsx","jsxs","_jsxs","componentes","navigation","style","styles","container","children","content","textBar","marginRight","name","size","color","texto","negrito","tamanho","cor","placeholder","onPress","data","details","arguments","length","undefined","lat","geometry","location","long","lng","latitude","longitude","query","key","googleApi","language","fetchDetails","listView","searchButton","dispatch","closeDrawer","create","flex","backgroundColor","padding","justifyContent","display","flexDirection","width","alignItems","gap","marginTop","marginBottom","position","height","borderRadius","shadowColor","bottom","right"],"sources":["D:/Test/WeatherApp/src/componentes/DrawerContent.js"],"sourcesContent":["import React from \"react\";\r\nimport { StyleSheet, View, TouchableOpacity } from \"react-native\";\r\nimport Icon from \"react-native-vector-icons/Ionicons\";\r\nimport { DrawerActions } from '@react-navigation/native'\r\nimport Texto from \"./Texto\";\r\nimport Config from '../../config/index.json'\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nexport var googlePlaces = null\r\n\r\n\r\nimport { GooglePlacesAutocomplete } from \"react-native-google-places-autocomplete\";\r\n\r\n\r\nexport default function componentes() {\r\n  const navigation = useNavigation();\r\n  return (\r\n    <View style={styles.container}>\r\n        <View style={styles.content}>\r\n          <View style={styles.textBar}>\r\n            <Icon\r\n              style={{ marginRight: 5 }}\r\n              name=\"location-outline\"\r\n              size={30}\r\n              color=\"#00000\"\r\n            />\r\n            <Texto\r\n              texto=\"Other Locations\"\r\n              negrito=\"bold\"\r\n              tamanho={25}\r\n              cor=\"#00000\"\r\n            />\r\n          </View>\r\n        </View>\r\n      <GooglePlacesAutocomplete\r\n            placeholder=\"Search\"\r\n            onPress={(data, details = null) => {\r\n              const lat =  details.geometry.location.lat;\r\n              const long = details.geometry.location.lng;\r\n              googlePlaces = {latitude:lat, longitude:long}\r\n            }}\r\n            query={{\r\n              key: Config.googleApi,\r\n              language: \"pt-br\",\r\n            }}\r\n            fetchDetails={true}\r\n            styles={{listView:styles.listView}}\r\n          />\r\n          <TouchableOpacity style={styles.searchButton} onPress={()=>navigation.dispatch(DrawerActions.closeDrawer())}>\r\n          <Texto texto=\"X\" negrito=\"bold\" tamanho={15}cor=\"#000\"/>\r\n          </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#f2ebe2\",\r\n    padding: 15,\r\n    justifyContent: \"center\",\r\n  },\r\n  textBar: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    width: \"100%\",\r\n    alignItems: \"baseline\",\r\n    gap: 30,\r\n    marginTop:150,\r\n    marginBottom: 10,\r\n  },\r\n  searchButton:{\r\n    position: \"absolute\",\r\n    width:35,\r\n    height: 35,\r\n    alignItems:\"center\",\r\n    justifyContent:\"center\",\r\n    borderRadius:10,\r\n    shadowColor:\"#000\",\r\n    bottom:10,\r\n    right:10,\r\n  },\r\n  listView:{\r\n    height:50,\r\n  }\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}